[{"/Users/jonatanlavado/Desktop/react-challenge/src/index.js":"1","/Users/jonatanlavado/Desktop/react-challenge/src/App.js":"2","/Users/jonatanlavado/Desktop/react-challenge/src/reportWebVitals.js":"3","/Users/jonatanlavado/Desktop/react-challenge/src/components/header.component.js":"4","/Users/jonatanlavado/Desktop/react-challenge/src/components/risk-selector.component.js":"5","/Users/jonatanlavado/Desktop/react-challenge/src/components/risk-buttons.component.js":"6","/Users/jonatanlavado/Desktop/react-challenge/src/components/risk-table.component.js":"7","/Users/jonatanlavado/Desktop/react-challenge/src/components/custom-button.component.js":"8","/Users/jonatanlavado/Desktop/react-challenge/src/components/risk-labels.component.js":"9","/Users/jonatanlavado/Desktop/react-challenge/src/redux/actions/index.js":"10","/Users/jonatanlavado/Desktop/react-challenge/src/redux/actions/actionTypes.js":"11","/Users/jonatanlavado/Desktop/react-challenge/src/redux/reducers/riskSelector.js":"12","/Users/jonatanlavado/Desktop/react-challenge/src/redux/store.js":"13","/Users/jonatanlavado/Desktop/react-challenge/src/redux/reducers/index.js":"14","/Users/jonatanlavado/Desktop/react-challenge/src/components/risk-calculator.component.js":"15","/Users/jonatanlavado/Desktop/react-challenge/src/components/risk-details.component.js":"16","/Users/jonatanlavado/Desktop/react-challenge/src/components/risk-button-calculator.component.js":"17","/Users/jonatanlavado/Desktop/react-challenge/src/components/table-calculator.component.js":"18"},{"size":573,"mtime":1610665772000,"results":"19","hashOfConfig":"20"},{"size":442,"mtime":1611066281000,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":1610550786000,"results":"22","hashOfConfig":"20"},{"size":400,"mtime":1611005983000,"results":"23","hashOfConfig":"20"},{"size":792,"mtime":1611071377000,"results":"24","hashOfConfig":"20"},{"size":959,"mtime":1610721245000,"results":"25","hashOfConfig":"20"},{"size":3724,"mtime":1611076195000,"results":"26","hashOfConfig":"20"},{"size":729,"mtime":1611071461000,"results":"27","hashOfConfig":"20"},{"size":599,"mtime":1611006412000,"results":"28","hashOfConfig":"20"},{"size":141,"mtime":1611072055000,"results":"29","hashOfConfig":"20"},{"size":35,"mtime":1611072043000,"results":"30","hashOfConfig":"20"},{"size":421,"mtime":1610950782000,"results":"31","hashOfConfig":"20"},{"size":117,"mtime":1610670549000,"results":"32","hashOfConfig":"20"},{"size":161,"mtime":1610951593000,"results":"33","hashOfConfig":"20"},{"size":550,"mtime":1611017949000,"results":"34","hashOfConfig":"20"},{"size":1226,"mtime":1611008985000,"results":"35","hashOfConfig":"20"},{"size":667,"mtime":1611020763000,"results":"36","hashOfConfig":"20"},{"size":9466,"mtime":1611076741000,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1w1egqq",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jonatanlavado/Desktop/react-challenge/src/index.js",[],["77","78"],"/Users/jonatanlavado/Desktop/react-challenge/src/App.js",[],"/Users/jonatanlavado/Desktop/react-challenge/src/reportWebVitals.js",[],"/Users/jonatanlavado/Desktop/react-challenge/src/components/header.component.js",[],"/Users/jonatanlavado/Desktop/react-challenge/src/components/risk-selector.component.js",[],"/Users/jonatanlavado/Desktop/react-challenge/src/components/risk-buttons.component.js",[],"/Users/jonatanlavado/Desktop/react-challenge/src/components/risk-table.component.js",["79","80","81"],"import '../styles/risk-table.css';\nimport React, { useEffect, useState } from \"react\";\nimport riskData from \"../data/data.json\";\nimport { useSelector } from 'react-redux';\nimport { Doughnut } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nfunction RiskTable() {\n  const [toggleButton, setToggleButton] = useState(true);\n  const selectedRisk = useSelector(state => state.selectedRisk);\n\n  const gridRef = React.createRef();\n  const options = {\n    responsive: true,\n    plugins: {\n      datalabels: {\n        showZero: false,\n        color: 'black',\n        formatter: function(value, context) {\n          if(value === 0) return '';\n          return value + '%';\n      }\n      }\n    }\n  }\n  const data = {\n    datasets: [{\n      data: [selectedRisk.bonds, selectedRisk.large_cap, selectedRisk.mid_cap, selectedRisk.foreign, selectedRisk.small_cap],\n      backgroundColor: [\n        'rgba(255, 99, 132, 0.2)',\n        'rgba(54, 162, 235, 0.2)',\n        'rgba(255, 206, 86, 0.2)',\n        'rgba(75, 192, 192, 0.2)',\n        'rgba(153, 102, 255, 0.2)'\n      ]\n    }],\n\n    // These labels appear in the legend and in the tooltips when hovering different arcs\n    labels: [\n      'Bonds',\n      'Large Cap',\n      'Mid Cap',\n      'Foreign',\n      'Small Cap'\n    ]\n  };\n\n  const handleClick = () => {\n    setToggleButton(toggleButton => !toggleButton);\n  };\n\n  useEffect(() => {\n    window.jQuery(gridRef.current).jsGrid({\n      width: \"100%\",\n      height: \"400px\",\n      data: riskData,\n      fields: [\n        { name: \"risk_level\", title: \"Risk\", type: \"number\", width: 50 },\n        { name: \"bonds\", title: \"Bonds %\", type: \"number\", width: 'auto' },\n        { name: \"large_cap\", title: \"Large Cap %\", type: \"number\", width: 'auto' },\n        { name: \"mid_cap\", title: \"Mid Cap %\", type: \"number\", width: 'auto' },\n        { name: \"foreign\", title: \"Foreign %\", type: \"number\", width: 'auto' },\n        { name: \"small_cap\", title: \"Small Cap %\", type: \"number\", width: 'auto' }\n      ]\n    });\n\n    const trs = document.querySelectorAll(\".jsgrid-grid-body tr\");\n    trs.forEach(tr => {\n      let tds = tr.getElementsByTagName('td');\n      if (parseInt(tds[0].innerText) === selectedRisk.risk_level) {\n        Array.from(tds).forEach(td => {\n          td.style.background = \"yellow\";\n        });\n      }\n    });\n\n  }, [selectedRisk]);\n\n  useEffect(() => {\n    window.jQuery(gridRef.current).jsGrid({\n      width: \"100%\",\n      height: \"400px\",\n      data: riskData,\n      fields: [\n        { name: \"risk_level\", title: \"Risk\", type: \"number\", width: 50 },\n        { name: \"bonds\", title: \"Bonds %\", type: \"number\", width: 'auto' },\n        { name: \"large_cap\", title: \"Large Cap %\", type: \"number\", width: 'auto' },\n        { name: \"mid_cap\", title: \"Mid Cap %\", type: \"number\", width: 'auto' },\n        { name: \"foreign\", title: \"Foreign %\", type: \"number\", width: 'auto' },\n        { name: \"small_cap\", title: \"Small Cap %\", type: \"number\", width: 'auto' }\n      ]\n    });\n\n    const trs = document.querySelectorAll(\".jsgrid-grid-body tr\");\n    trs.forEach(tr => {\n      let tds = tr.getElementsByTagName('td');\n      if (parseInt(tds[0].innerText) === selectedRisk.risk_level) {\n        Array.from(tds).forEach(td => {\n          td.style.background = \"yellow\";\n        });\n      }\n    });\n\n  }, [toggleButton]);\n\n  return (\n    <div id=\"risk-chart-container\">\n      { toggleButton ? <div id=\"jsGrid\" ref={gridRef}></div> : <Doughnut width={280} data={data} options={options}/>}\n      <img\n        id=\"toggle-graph\"\n        src={toggleButton ? \"donutlogo.png\" : \"chartlogo.jpg\"}\n        onClick={handleClick}\n        alt=\"toggle_img\"\n      />\n    </div>\n  );\n\n}\n\nexport default RiskTable;","/Users/jonatanlavado/Desktop/react-challenge/src/components/custom-button.component.js",[],"/Users/jonatanlavado/Desktop/react-challenge/src/components/risk-labels.component.js",[],"/Users/jonatanlavado/Desktop/react-challenge/src/redux/actions/index.js",[],"/Users/jonatanlavado/Desktop/react-challenge/src/redux/actions/actionTypes.js",[],"/Users/jonatanlavado/Desktop/react-challenge/src/redux/reducers/riskSelector.js",[],"/Users/jonatanlavado/Desktop/react-challenge/src/redux/store.js",[],"/Users/jonatanlavado/Desktop/react-challenge/src/redux/reducers/index.js",[],"/Users/jonatanlavado/Desktop/react-challenge/src/components/risk-calculator.component.js",[],"/Users/jonatanlavado/Desktop/react-challenge/src/components/risk-details.component.js",["82"],"import React, { useEffect } from \"react\";\nimport { useSelector } from 'react-redux';\nimport '../styles/risk-details.css';\n\nfunction RiskDetails() {\n    const selectedRisk = useSelector(state => state.selectedRisk);\n    const tableRef = React.createRef();\n    \n    useEffect(() => {\n        window.jQuery(tableRef.current).jsGrid({\n            width: \"100%\",\n            height: \"76px\",\n            data: [selectedRisk],\n            fields: [\n                { name: \"bonds\", title: \"Bonds %\", type: \"number\", width: 'auto' },\n                { name: \"large_cap\", title: \"Large Cap %\", type: \"number\", width: 'auto' },\n                { name: \"mid_cap\", title: \"Mid Cap %\", type: \"number\", width: 'auto' },\n                { name: \"foreign\", title: \"Foreign %\", type: \"number\", width: 'auto' },\n                { name: \"small_cap\", title: \"Small Cap %\", type: \"number\", width: 'auto' }\n            ]\n        });\n\n    }, [selectedRisk]);\n\n    return (\n        <div id=\"risk-details-container\">\n            <div>Risk Level {selectedRisk.risk_level ? selectedRisk.risk_level : 0}</div>\n            {selectedRisk.risk_level && <div id=\"selectedRiskTable\" ref={tableRef}></div>}\n        </div>\n    );\n\n}\n\nexport default RiskDetails;","/Users/jonatanlavado/Desktop/react-challenge/src/components/risk-button-calculator.component.js",[],"/Users/jonatanlavado/Desktop/react-challenge/src/components/table-calculator.component.js",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":23},{"ruleId":"91","severity":1,"message":"92","line":77,"column":6,"nodeType":"93","endLine":77,"endColumn":20,"suggestions":"94"},{"ruleId":"91","severity":1,"message":"95","line":104,"column":6,"nodeType":"93","endLine":104,"endColumn":20,"suggestions":"96"},{"ruleId":"91","severity":1,"message":"97","line":23,"column":8,"nodeType":"93","endLine":23,"endColumn":22,"suggestions":"98"},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'ChartDataLabels' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'gridRef'. Either include it or remove the dependency array.","ArrayExpression",["101"],"React Hook useEffect has missing dependencies: 'gridRef' and 'selectedRisk.risk_level'. Either include them or remove the dependency array.",["102"],"React Hook useEffect has a missing dependency: 'tableRef'. Either include it or remove the dependency array.",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [gridRef, selectedRisk]",{"range":"110","text":"111"},"Update the dependencies array to be: [gridRef, selectedRisk.risk_level, toggleButton]",{"range":"112","text":"113"},"Update the dependencies array to be: [selectedRisk, tableRef]",{"range":"114","text":"115"},[2352,2366],"[gridRef, selectedRisk]",[3332,3346],"[gridRef, selectedRisk.risk_level, toggleButton]",[919,933],"[selectedRisk, tableRef]"]